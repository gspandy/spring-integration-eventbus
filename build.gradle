buildscript {
    repositories { jcenter() }
    dependencies {
        classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:1.12.+'
    }
}

plugins {
    id 'java'
    id 'groovy'
    id 'maven'
    id 'maven-publish'
    id 'signing'
    id 'com.jfrog.bintray' version '1.0'
}

apply plugin: 'optional-base'


sourceCompatibility = 1.8
targetCompatibility = 1.8


repositories {
    jcenter()
}


dependencies {

    compile 'org.springframework:spring-context:4.+'
    compile 'org.springframework:spring-messaging:4.+'
    compile 'org.springframework.integration:spring-integration-core:4.1.+'
    compile 'org.springframework.integration:spring-integration-java-dsl:1.+'

    compile 'org.slf4j:slf4j-api:1.7.+'
    compile 'com.google.guava:guava:18.0'

    compile 'org.springframework.boot:spring-boot:1.2.2.RELEASE', optional
    compile 'org.springframework.boot:spring-boot-autoconfigure:1.2.2.RELEASE', optional

    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    testCompile 'org.spockframework:spock-spring:1.0-groovy-2.4'
    testCompile 'org.mockito:mockito-all:1.10.8'
    testCompile ('com.cyrusinnovation:mockito-groovy-support:1.3') {
        exclude group: 'org.mockito'
    }

    testCompile 'org.springframework:spring-test:4.+'

    testCompile 'org.slf4j:jcl-over-slf4j:1.7.+'
    testRuntime 'org.apache.logging.log4j:log4j-core:2.2'
    testRuntime 'org.apache.logging.log4j:log4j-slf4j-impl:2.2'
    testRuntime 'cglib:cglib-nodep:3.1'
}


def pomDefinition = pom {
    project {
        name project.friendly_name
        packaging 'jar'
        description project.description
        url project.home_url

        scm {
            connection "scm:git:${project.scm_url}"
            developerConnection "scm:git:${project.scm_url}"
            url project.scm_url
        }

        licenses {
            license {
                name = project.license_name
                url project.license_url
            }
        }

        developers {
            developer {
                name 'Till Krullmann'
                email 'till.krullmann@gmx.net'
            }
        }
    }
}


task generatePom {
    outputs.file "$buildDir/poms/pom.xml"
    doLast {
        pomDefinition.writeTo "$buildDir/poms/pom.xml"
    }
}


jar {
    into("META-INF/maven/$project.group/$project.name") {
        from generatePom
    }
}


task javadocJar(type: Jar) {
    description = 'Assembles a jar archive containing the javadocs.'
    classifier = 'javadoc'
    from javadoc
}


task sourcesJar(type: Jar) {
    description = 'Assembles a jar archive containing the sources.'
    classifier = 'sources'
    from sourceSets.main.allSource
}



artifacts {
    archives javadocJar, sourcesJar
}


signing {
    sign configurations.archives
}


install {
    repositories.mavenInstaller {
        beforeDeployment { deployment -> signing.signPom(deployment) }

        pom = pomDefinition
    }
}


bintray {
    user = bintray_user
    key = bintray_key
    configurations = ['archives']

    pkg {
        repo = project.bintray_repo
        name = project.name
        desc = project.description
        websiteUrl = project.home_url
        licenses = ['MIT']
        labels = ['events', 'eventbus', 'spring-integration']

        vcsUrl = project.scm_url
        issueTrackerUrl = project.issues_url
        publicDownloadNumbers = true

        version {
            vcsTag = project.version
        }
    }
}
